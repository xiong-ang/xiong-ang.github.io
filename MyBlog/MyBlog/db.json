{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/timg.jpg","path":"images/timg.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1501628194000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1501628194000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1501628194000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1501628194000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1501628194000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1501628194000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1501628194000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1501628194000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1501628194000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1501628194000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1501628194000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1501628194000},{"_id":"themes/next/_config.yml","hash":"08c249267316702ef651cb561c19b9b2618be65b","modified":1508661763724},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1501628194000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1501628194000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1501628194000},{"_id":"source/_posts/2017.10.22.md","hash":"1871cee9839c4292c90100dfbfe7e844523c12f1","modified":1508761608124},{"_id":"source/_posts/clipboard.md","hash":"95236de7d0d7e0fd9eae6a7deb048b09e673b649","modified":1509284666440},{"_id":"source/_posts/dragdrop.md","hash":"0717511fbaeff980db24842a0f5c0f3c2aa9904d","modified":1509285084777},{"_id":"source/categories/index.md","hash":"ad827ccea57c6cff5fe2f67ec4c5f414a86144bf","modified":1508662056720},{"_id":"source/tags/index.md","hash":"45672191966a582e712cc998b0e97e195f230ad5","modified":1508662080817},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1501628194000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1501628194000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1501628194000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1501628194000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1501628194000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1501628194000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1501628194000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1501628194000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1501628194000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1501628194000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1501628194000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1501628194000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1501628194000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1501628194000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1501628194000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1501628194000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1501628194000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1501628194000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1501628194000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1501628194000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1501628194000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1501628194000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1501628194000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1501628194000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1501628194000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1501628194000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1501628194000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1501628194000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1501628194000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501628194000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501628194000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1501628194000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1501628194000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1501628194000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1501628194000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1501628194000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1501628194000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1501628194000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1501628194000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1501628194000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1501628194000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1501628194000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1501628194000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1501628194000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1501628194000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1501628194000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1501628194000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1501628194000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1501628194000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1501628194000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1501628194000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1501628194000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1501628194000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1501628194000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1501628194000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1501628194000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1501628194000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1501628194000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1501628194000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1501628194000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1501628194000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1501628194000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1501628194000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1501628194000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501628194000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501628194000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501628194000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501628194000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501628194000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501628194000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1501628194000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1501628194000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501628194000},{"_id":"themes/next/source/images/timg.jpg","hash":"67f911a404c9f766e9c9adeb2c3c8a1544df711c","modified":1508658958004},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501628194000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1501628194000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1501628194000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1501628194000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1501628194000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501628194000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1501628194000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1501628194000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1501628194000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1501628194000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1501628194000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1501628194000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1501628194000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1501628194000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501628194000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1501628194000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1501628194000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1501628194000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501628194000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1501628194000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1501628194000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1501628194000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1501628194000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501628194000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1501628194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1501628194000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1501628194000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1501628194000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501628194000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1501628194000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1501628194000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1501628194000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1501628194000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501628194000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1501628194000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1501628194000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1501628194000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1501628194000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501628194000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1501628194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501628194000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501628194000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501628194000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1501628194000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501628194000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501628194000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501628194000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1501628194000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1501628194000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501628194000},{"_id":"public/categories/index.html","hash":"2d81afa6a730b683bcb80f79c8bdcdfd2b9ea4b4","modified":1509284888193},{"_id":"public/tags/index.html","hash":"6b76a4014be26b4dcd0d11244e3494966d7cc1d1","modified":1509284888196},{"_id":"public/archives/index.html","hash":"a19537c0e785d128f0f27379f24763bfa8bf2e07","modified":1509284888197},{"_id":"public/archives/2017/index.html","hash":"eeda98720b04b8ccf96b98b65ef2f37e8dcb5fa5","modified":1509284888197},{"_id":"public/archives/2017/10/index.html","hash":"fceda8021e7977ad120304fe67d330de14115a9a","modified":1509284888197},{"_id":"public/source/categories/CI/index.html","hash":"ddf0d98fb33b505c5676b891a1457c99d16e30a9","modified":1509284888197},{"_id":"public/source/tags/Code-Coverage/index.html","hash":"fff4fd8d97bdf39a193224ee8526acd4e7cda571","modified":1509284888197},{"_id":"public/source/tags/CI/index.html","hash":"d941292e5bc0f470839241cd0a432ff9b150fb4b","modified":1509284888198},{"_id":"public/2017/10/22/2017.10.22/index.html","hash":"60b9cb14d014f2e4488b3639293522b3172487e3","modified":1509284888198},{"_id":"public/index.html","hash":"d7bcf69fe87f1e5d39f9a32d5dbbe9f8717b8e92","modified":1509284888198},{"_id":"public/source/categories/C/index.html","hash":"927b57e9dc64556fabde9dd2080d6ba33c7d9e39","modified":1509284888216},{"_id":"public/source/tags/Clipboard/index.html","hash":"2f912c27fc5c351faa480ec88955b3a385053d39","modified":1509284888216},{"_id":"public/source/tags/C/index.html","hash":"7f97849ac189f50170eca368d573fb721adb6a54","modified":1509284888216},{"_id":"public/source/tags/DragDrop/index.html","hash":"680f3a1b3c5fb83ef111d5d687bcbb7778827136","modified":1509284888216},{"_id":"public/2017/10/29/dragdrop/index.html","hash":"9f17447a3739fb3355f85d4b50a8f597f3083e19","modified":1509285101965},{"_id":"public/2017/10/29/clipboard/index.html","hash":"d9d88149ec0325e54a57c5f202cc2f337815b86f","modified":1509284888216},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1509284888237},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509284888237},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1509284888237},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1509284888237},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1509284888237},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1509284888237},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1509284888237},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1509284888237},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1509284888238},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509284888238},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509284888238},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1509284888238},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1509284888238},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1509284888238},{"_id":"public/images/timg.jpg","hash":"67f911a404c9f766e9c9adeb2c3c8a1544df711c","modified":1509284888239},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1509284888239},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1509284888239},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509284888239},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509284888239},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509284888239},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509284888239},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509284888239},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509284888239},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1509284888239},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1509284888240},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1509284888240},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1509284888240},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1509284888240},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509284888240},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509284889420},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509284889445},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1509284889462},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509284889464},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1509284889464},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1509284889464},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509284889464},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1509284889464},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1509284889464},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1509284889464},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1509284889464},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509284889464},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1509284889464},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509284889464},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509284889464},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1509284889465},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1509284889465},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1509284889465},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1509284889465},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1509284889465},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1509284889465},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509284889465},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509284889465},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1509284889465},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1509284889465},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1509284889465},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1509284889465},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1509284889466},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1509284889467},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1509284889467},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1509284889467},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1509284889468},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1509284889468},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1509284889468},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1509284889468},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1509284889468},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1509284889468},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1509284889468},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509284889468},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1509284889468},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509284889468},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509284889468},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509284889468},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509284889468},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509284889469},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509284889469},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509284889469},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509284889469},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509284889469},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1509284889469},{"_id":"public/css/main.css","hash":"c36a1b5be604d2dee572a96400705f9e8213faea","modified":1509284889469},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1509284889469},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1509284889469},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1509284889469},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509284889469},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509284889469},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509284889469},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1509284889469},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1509284889470},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1509284889470},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509284889470},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509284889470},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1509284889470},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1509284889470},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509284889470},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1509284889470},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509284889470},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509284889470},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1509284889470},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509284889471},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509284889471},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509284889471},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509284889511}],"Category":[{"name":"CI","_id":"cj9ct93fu0004koui40jk3ust"},{"name":"C#","_id":"cj9ct93gb0007kouit8qez2af"}],"Data":[],"Page":[{"title":"分类","date":"2016-11-15T11:11:13.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2016-11-15 19:11:13\ntype: \"categories\"\n---","updated":"2017-10-22T08:47:36.720Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj9ct93f20001kouidv1gwl56","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2016-11-15T11:11:13.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-11-15 19:11:13\ntype: \"tags\"\n---","updated":"2017-10-22T08:48:00.817Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj9ct93fr0003koui9n5xo8wc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"如何自动化分析代码覆盖率(How to Use the Code Coverage Analysis Tool)","date":"2017-10-22T05:36:10.000Z","_content":"\n> 由于项目CI方面需求，前段时间学习和使用了微软的代码覆盖率（Code Coverage）分析工具，当时着手做时，发现网上资料非常欠缺，遇到了不少坑，在此做个总结，希望能帮到有这方面需求的人。\n\n**Code Coverage**，代码覆盖率，是CI的需求一部分。微软VS ultimate版本提供了测试Code Coverage的选项，也提供了相应的命令行工具。\n\n## 使用微软命令行工具分析Code Coverage\n![](https://github.com/xiong-ang/xiong-ang.github.io/blob/Hexo/MyBlog/MyBlog/images/codecoverage.PNG?raw=true)\n\n1. Instrument，可以理解为配备或准备的意思，这一步使用的工具Vsinstr.exe，它需要将被测程序集名称作为参数，主要作用是将需要测量的程序集分块，并插入监听程序，在这个工程中，需要程序集对应的PDB文件。\n2. 开启监听，并收集覆盖率。这一步用到的工具是Vsperfcmd.exe，它会开启一个监听程序Vsperfmon.exe,当Instrumented的程序集被覆盖到时，会Vsperfmon.exe会收到通知。\n3. 运行测试用例。\n4. 使用Vsperfcmd，输入与上面不同的参数，停止监听，生成Code Coverage报告。\n\n## 遵循这四步的Workflow\n1. 首先安装需要分析Code Coverage的产品\n2. 将PDB拷贝到程序集所在的目录，这里需要注意的是，我们需要分析Code Coverage的程序集有可能并不是都在一个目录，这时，需要我们将PDB文件拷贝到多个地方。\n3. 编写脚本\n\n>* Instrumt \n```\nVsinstr -coverage <myprojectbinary  the dll/exe>\n...\nVsinstr -coverage <myprojectbinary the dll/exe>\n```\n\n>* 开始脚本\n```\nVSPerfCmd.exe /start:coverage /output:\"*.Coverage\"\n或\nStart vsperfmon -coverage -output:mytestrun.coverage\n```\n\n>* 结束脚本\n```\nvsperfcmd –shutdown\n```\n\n4. 运行开始脚本，这一步做的是Instrumt,并且开始监控\n5. 运行测试用例\n6. 运行结束脚本，这一步的作用是结束监听，并且生成报告\n\n## 最后值得注意的事项\n1. 在分析Code Coverage的过程中，后台会启动一个VSPerfMon.exed的进程，用于收集Code Coverage信息，只要这个进程结束，收集会终止，所以在这个过程中，关机或者手动关闭这个进程，都会影响分析结果的准确性。\n2. 得到的*.coverage文件是与Instrumented的程序集以及PDB文件相关联的，如果需要保存和转移，微软官网给我们的建议是通过VS转换成XML格式。\n3. Instrument过程中需要程序集的名字作为参数，这意味着，如果我们项目工程增多了，需要对新增加的程序集进行分析，就需要修改脚本。\n4. 第四点值得开发人员注意，微软根据Block的概念计算Code Coverage，而Block的概念是与Instrumented 程序集中的CIL对应的，并不是我们实际的Code，所以我们如果我们从Code文本出发来理解VS中Code Coverage百分比时，往往会比较迷惑。实际上，我们也没有必要这样去做。\n5. Last but not least, 最权威的资料: [https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx]\n\n> 本文作者--Barret Xiong--\n> 转载请注明出处！","source":"_posts/2017.10.22.md","raw":"---\ntitle: 如何自动化分析代码覆盖率(How to Use the Code Coverage Analysis Tool)\ndate: 2017-10-22 13:36:10\ncategories: CI\ntags: [Code Coverage, CI]\n---\n\n> 由于项目CI方面需求，前段时间学习和使用了微软的代码覆盖率（Code Coverage）分析工具，当时着手做时，发现网上资料非常欠缺，遇到了不少坑，在此做个总结，希望能帮到有这方面需求的人。\n\n**Code Coverage**，代码覆盖率，是CI的需求一部分。微软VS ultimate版本提供了测试Code Coverage的选项，也提供了相应的命令行工具。\n\n## 使用微软命令行工具分析Code Coverage\n![](https://github.com/xiong-ang/xiong-ang.github.io/blob/Hexo/MyBlog/MyBlog/images/codecoverage.PNG?raw=true)\n\n1. Instrument，可以理解为配备或准备的意思，这一步使用的工具Vsinstr.exe，它需要将被测程序集名称作为参数，主要作用是将需要测量的程序集分块，并插入监听程序，在这个工程中，需要程序集对应的PDB文件。\n2. 开启监听，并收集覆盖率。这一步用到的工具是Vsperfcmd.exe，它会开启一个监听程序Vsperfmon.exe,当Instrumented的程序集被覆盖到时，会Vsperfmon.exe会收到通知。\n3. 运行测试用例。\n4. 使用Vsperfcmd，输入与上面不同的参数，停止监听，生成Code Coverage报告。\n\n## 遵循这四步的Workflow\n1. 首先安装需要分析Code Coverage的产品\n2. 将PDB拷贝到程序集所在的目录，这里需要注意的是，我们需要分析Code Coverage的程序集有可能并不是都在一个目录，这时，需要我们将PDB文件拷贝到多个地方。\n3. 编写脚本\n\n>* Instrumt \n```\nVsinstr -coverage <myprojectbinary  the dll/exe>\n...\nVsinstr -coverage <myprojectbinary the dll/exe>\n```\n\n>* 开始脚本\n```\nVSPerfCmd.exe /start:coverage /output:\"*.Coverage\"\n或\nStart vsperfmon -coverage -output:mytestrun.coverage\n```\n\n>* 结束脚本\n```\nvsperfcmd –shutdown\n```\n\n4. 运行开始脚本，这一步做的是Instrumt,并且开始监控\n5. 运行测试用例\n6. 运行结束脚本，这一步的作用是结束监听，并且生成报告\n\n## 最后值得注意的事项\n1. 在分析Code Coverage的过程中，后台会启动一个VSPerfMon.exed的进程，用于收集Code Coverage信息，只要这个进程结束，收集会终止，所以在这个过程中，关机或者手动关闭这个进程，都会影响分析结果的准确性。\n2. 得到的*.coverage文件是与Instrumented的程序集以及PDB文件相关联的，如果需要保存和转移，微软官网给我们的建议是通过VS转换成XML格式。\n3. Instrument过程中需要程序集的名字作为参数，这意味着，如果我们项目工程增多了，需要对新增加的程序集进行分析，就需要修改脚本。\n4. 第四点值得开发人员注意，微软根据Block的概念计算Code Coverage，而Block的概念是与Instrumented 程序集中的CIL对应的，并不是我们实际的Code，所以我们如果我们从Code文本出发来理解VS中Code Coverage百分比时，往往会比较迷惑。实际上，我们也没有必要这样去做。\n5. Last but not least, 最权威的资料: [https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx]\n\n> 本文作者--Barret Xiong--\n> 转载请注明出处！","slug":"2017.10.22","published":1,"updated":"2017-10-23T12:26:48.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ct93er0000koui7v7svah5","content":"<blockquote>\n<p>由于项目CI方面需求，前段时间学习和使用了微软的代码覆盖率（Code Coverage）分析工具，当时着手做时，发现网上资料非常欠缺，遇到了不少坑，在此做个总结，希望能帮到有这方面需求的人。</p>\n</blockquote>\n<p><strong>Code Coverage</strong>，代码覆盖率，是CI的需求一部分。微软VS ultimate版本提供了测试Code Coverage的选项，也提供了相应的命令行工具。</p>\n<h2 id=\"使用微软命令行工具分析Code-Coverage\"><a href=\"#使用微软命令行工具分析Code-Coverage\" class=\"headerlink\" title=\"使用微软命令行工具分析Code Coverage\"></a>使用微软命令行工具分析Code Coverage</h2><p><img src=\"https://github.com/xiong-ang/xiong-ang.github.io/blob/Hexo/MyBlog/MyBlog/images/codecoverage.PNG?raw=true\" alt=\"\"></p>\n<ol>\n<li>Instrument，可以理解为配备或准备的意思，这一步使用的工具Vsinstr.exe，它需要将被测程序集名称作为参数，主要作用是将需要测量的程序集分块，并插入监听程序，在这个工程中，需要程序集对应的PDB文件。</li>\n<li>开启监听，并收集覆盖率。这一步用到的工具是Vsperfcmd.exe，它会开启一个监听程序Vsperfmon.exe,当Instrumented的程序集被覆盖到时，会Vsperfmon.exe会收到通知。</li>\n<li>运行测试用例。</li>\n<li>使用Vsperfcmd，输入与上面不同的参数，停止监听，生成Code Coverage报告。</li>\n</ol>\n<h2 id=\"遵循这四步的Workflow\"><a href=\"#遵循这四步的Workflow\" class=\"headerlink\" title=\"遵循这四步的Workflow\"></a>遵循这四步的Workflow</h2><ol>\n<li>首先安装需要分析Code Coverage的产品</li>\n<li>将PDB拷贝到程序集所在的目录，这里需要注意的是，我们需要分析Code Coverage的程序集有可能并不是都在一个目录，这时，需要我们将PDB文件拷贝到多个地方。</li>\n<li>编写脚本</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>Instrumt </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vsinstr -coverage &lt;myprojectbinary  the dll/exe&gt;</div><div class=\"line\">...</div><div class=\"line\">Vsinstr -coverage &lt;myprojectbinary the dll/exe&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>开始脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">VSPerfCmd.exe /start:coverage /output:&quot;*.Coverage&quot;</div><div class=\"line\">或</div><div class=\"line\">Start vsperfmon -coverage -output:mytestrun.coverage</div></pre></td></tr></table></figure>\n</li>\n<li><p>结束脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vsperfcmd –shutdown</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<ol>\n<li>运行开始脚本，这一步做的是Instrumt,并且开始监控</li>\n<li>运行测试用例</li>\n<li>运行结束脚本，这一步的作用是结束监听，并且生成报告</li>\n</ol>\n<h2 id=\"最后值得注意的事项\"><a href=\"#最后值得注意的事项\" class=\"headerlink\" title=\"最后值得注意的事项\"></a>最后值得注意的事项</h2><ol>\n<li>在分析Code Coverage的过程中，后台会启动一个VSPerfMon.exed的进程，用于收集Code Coverage信息，只要这个进程结束，收集会终止，所以在这个过程中，关机或者手动关闭这个进程，都会影响分析结果的准确性。</li>\n<li>得到的*.coverage文件是与Instrumented的程序集以及PDB文件相关联的，如果需要保存和转移，微软官网给我们的建议是通过VS转换成XML格式。</li>\n<li>Instrument过程中需要程序集的名字作为参数，这意味着，如果我们项目工程增多了，需要对新增加的程序集进行分析，就需要修改脚本。</li>\n<li>第四点值得开发人员注意，微软根据Block的概念计算Code Coverage，而Block的概念是与Instrumented 程序集中的CIL对应的，并不是我们实际的Code，所以我们如果我们从Code文本出发来理解VS中Code Coverage百分比时，往往会比较迷惑。实际上，我们也没有必要这样去做。</li>\n<li>Last but not least, 最权威的资料: [<a href=\"https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx\" target=\"_blank\" rel=\"external\">https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx</a>]</li>\n</ol>\n<blockquote>\n<p>本文作者–Barret Xiong–<br>转载请注明出处！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>由于项目CI方面需求，前段时间学习和使用了微软的代码覆盖率（Code Coverage）分析工具，当时着手做时，发现网上资料非常欠缺，遇到了不少坑，在此做个总结，希望能帮到有这方面需求的人。</p>\n</blockquote>\n<p><strong>Code Coverage</strong>，代码覆盖率，是CI的需求一部分。微软VS ultimate版本提供了测试Code Coverage的选项，也提供了相应的命令行工具。</p>\n<h2 id=\"使用微软命令行工具分析Code-Coverage\"><a href=\"#使用微软命令行工具分析Code-Coverage\" class=\"headerlink\" title=\"使用微软命令行工具分析Code Coverage\"></a>使用微软命令行工具分析Code Coverage</h2><p><img src=\"https://github.com/xiong-ang/xiong-ang.github.io/blob/Hexo/MyBlog/MyBlog/images/codecoverage.PNG?raw=true\" alt=\"\"></p>\n<ol>\n<li>Instrument，可以理解为配备或准备的意思，这一步使用的工具Vsinstr.exe，它需要将被测程序集名称作为参数，主要作用是将需要测量的程序集分块，并插入监听程序，在这个工程中，需要程序集对应的PDB文件。</li>\n<li>开启监听，并收集覆盖率。这一步用到的工具是Vsperfcmd.exe，它会开启一个监听程序Vsperfmon.exe,当Instrumented的程序集被覆盖到时，会Vsperfmon.exe会收到通知。</li>\n<li>运行测试用例。</li>\n<li>使用Vsperfcmd，输入与上面不同的参数，停止监听，生成Code Coverage报告。</li>\n</ol>\n<h2 id=\"遵循这四步的Workflow\"><a href=\"#遵循这四步的Workflow\" class=\"headerlink\" title=\"遵循这四步的Workflow\"></a>遵循这四步的Workflow</h2><ol>\n<li>首先安装需要分析Code Coverage的产品</li>\n<li>将PDB拷贝到程序集所在的目录，这里需要注意的是，我们需要分析Code Coverage的程序集有可能并不是都在一个目录，这时，需要我们将PDB文件拷贝到多个地方。</li>\n<li>编写脚本</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>Instrumt </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vsinstr -coverage &lt;myprojectbinary  the dll/exe&gt;</div><div class=\"line\">...</div><div class=\"line\">Vsinstr -coverage &lt;myprojectbinary the dll/exe&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>开始脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">VSPerfCmd.exe /start:coverage /output:&quot;*.Coverage&quot;</div><div class=\"line\">或</div><div class=\"line\">Start vsperfmon -coverage -output:mytestrun.coverage</div></pre></td></tr></table></figure>\n</li>\n<li><p>结束脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vsperfcmd –shutdown</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<ol>\n<li>运行开始脚本，这一步做的是Instrumt,并且开始监控</li>\n<li>运行测试用例</li>\n<li>运行结束脚本，这一步的作用是结束监听，并且生成报告</li>\n</ol>\n<h2 id=\"最后值得注意的事项\"><a href=\"#最后值得注意的事项\" class=\"headerlink\" title=\"最后值得注意的事项\"></a>最后值得注意的事项</h2><ol>\n<li>在分析Code Coverage的过程中，后台会启动一个VSPerfMon.exed的进程，用于收集Code Coverage信息，只要这个进程结束，收集会终止，所以在这个过程中，关机或者手动关闭这个进程，都会影响分析结果的准确性。</li>\n<li>得到的*.coverage文件是与Instrumented的程序集以及PDB文件相关联的，如果需要保存和转移，微软官网给我们的建议是通过VS转换成XML格式。</li>\n<li>Instrument过程中需要程序集的名字作为参数，这意味着，如果我们项目工程增多了，需要对新增加的程序集进行分析，就需要修改脚本。</li>\n<li>第四点值得开发人员注意，微软根据Block的概念计算Code Coverage，而Block的概念是与Instrumented 程序集中的CIL对应的，并不是我们实际的Code，所以我们如果我们从Code文本出发来理解VS中Code Coverage百分比时，往往会比较迷惑。实际上，我们也没有必要这样去做。</li>\n<li>Last but not least, 最权威的资料: [<a href=\"https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx\" target=\"_blank\" rel=\"external\">https://msdn.microsoft.com/en-us/library/dd299398(v=vs.90).aspx</a>]</li>\n</ol>\n<blockquote>\n<p>本文作者–Barret Xiong–<br>转载请注明出处！</p>\n</blockquote>\n"},{"title":"C# Clipboard使用（How to Use Clipboard in C#）","date":"2017-10-29T13:41:31.000Z","_content":"# **Clipboard引荐**\n> Clipboard，即剪切板，当我们同时按动Ctrl＋C时，选定的对象就被存放在了剪切板中了。如果刚才选定的对象是文件，那么在定盘符后，按动Ctrl＋V键或者点击菜单“粘贴”，这时选定的文件就保存到指定的磁盘上面了；如果选定的对象是图象，那么在打开“画图”之后，按动Ctrl＋V键或者点击菜单“粘贴”，图象就会显示在画图中了；如果是文本，那么在打开文本编辑器后，按动Ctrl＋V键或者点击菜单“粘贴”，这时文本就会显示在文本编辑器中。当然选定的对象还有许多种，这就不一一举例了。上面这些操作其实就是剪切板几种典型的操作。那么这些操作如果用Visual C＃来实现到底是个什么样子？  \n微软引入**Clipboard类**进行处理，我们先来介绍[MSDN](https://msdn.microsoft.com/zh-cn/library/system.windows.forms.clipboard.aspx)上的一个例子进入今天的讨论。 \n```\n/*\n下述代码放置文本数据进入Clipboard，并从中在提取出来。\nWinfrm代码界面元素包括：button1, button2, textBox1, textBox2\n*/\n\nprivate void button1_Click(object sender, System.EventArgs e) {\n    //button1_Click 调用SetDataObject将textBox1中选中的文字放入系统剪切板\n\n    if(textBox1.SelectedText != \"\")\n       Clipboard.SetDataObject(textBox1.SelectedText);\n    else\n       textBox2.Text = \"No text selected in textBox1\";\n }\n\n private void button2_Click(object sender, System.EventArgs e) {\n    //button2_Click 调用GetDataObject从系统剪切板提取数据\n\n    IDataObject iData = Clipboard.GetDataObject();\n\n    //判断是否有Text数据格式\n    if(iData.GetDataPresent(DataFormats.Text)) {\n       textBox2.Text = (String)iData.GetData(DataFormats.Text); \n    }\n    else {\n       textBox2.Text = \"Could not retrieve data off the clipboard.\";\n    }\n }\n``` \n从这个例子可以学到Clipboard的最基本用法：用SetDataObjec将数据存入系统剪切板；用GetDataObject从系统剪切板获取数据。  \n\n\n# **使用Clipboard保存/获取各种媒体**\n以实际操作的经验，剪切板不仅可以拷贝文字，还可以拷贝图片、文件，当然，通过程序，还可以让Clipboard保存音频和自定义类型。下面针对这些功能分别加以介绍。  \n* **Clipboard保存多媒体**\n```\nclass ClipboardDataFormat\n{\n    public static readonly string TEXT=\"Text\";\n    public static readonly string IMAGE=\"Image\";\n    public static readonly string FILEDROP=\"FileDrop\";\n    public static readonly string AUDIO=\"Audio\";\n    public static readonly string USERDEFINED=\"UserDefined\";\n}\n\nclass ClipboardProcesser\n{\n    public static void SetDataToClipboard(object o, string type)\n    {\n        try\n        {\n            if (o != null)\n            {\n                if (type == ClipboardDataFormat.TEXT)\n                {\n                    Clipboard.SetText((string)o);\n                }\n                if (type == ClipboardDataFormat.FILEDROP)\n                {\n                    Clipboard.SetFileDropList((System.Collections.Specialized.StringCollection)o);\n                }\n                if (type == ClipboardDataFormat.IMAGE)\n                {\n                    Clipboard.SetImage((System.Drawing.Image)o);\n                }\n                if (type == ClipboardDataFormat.AUDIO)\n                {\n                    Clipboard.SetAudio((Stream)o);\n                }\n                if (type == ClipboardDataFormat.USERDEFINED)\n                {\n                    MyItem item = (MyItem)o;\n                    item.ToClipboard();\n                }\n            }\n        }\n        catch (Exception)\n        {\n        }\n    }\n```\n```\n//自定义要往剪切板添加的类型\n[Serializable]\npublic class MyItem\n{\n    public string ItemName { get; set; }\n    public object ItemData { get; set; }\n    \n    public void ToClipboard()\n    {\n        DataFormats.Format format = DataFormats.GetFormat(ClipboardDataFormat.USERDEFINED);\n\n        IDataObject dataObj = new DataObject();\n        dataObj.SetData(format.Name, false, this);\n        Clipboard.SetDataObject(dataObj, false);\n    }\n}\n```\n* **Clipboard获取多媒体**\n```\npublic static object GetDataFromClipboardByType(string type)\n    {\n        object retObj = null;\n        try\n        {\n            if (type == ClipboardDataFormat.TEXT)\n            {\n                retObj = Clipboard.GetText();\n            }\n            if (type == ClipboardDataFormat.FILEDROP)\n            {\n                retObj = Clipboard.GetFileDropList();\n            }\n            if (type == ClipboardDataFormat.IMAGE)\n            {\n                retObj = Clipboard.GetImage();\n            }\n            if (type == ClipboardDataFormat.AUDIO)\n            {\n                retObj = Clipboard.GetAudioStream();\n            }\n            if (type == ClipboardDataFormat.USERDEFINED)\n            {\n                IDataObject iData = Clipboard.GetDataObject();\n                retObj = (MyItem)iData.GetData(type);\n            }                \n        }\n        catch (Exception)\n        {\n            retObj = null;\n        }\n        return retObj;\n    }\n\n    public static string GetDataTypeFromClipboard()\n    {\n        string type = string.Empty;\n\n        try\n        {\n            if (Clipboard.ContainsText())\n            {\n                type = ClipboardDataFormat.TEXT;\n            }\n            else if (Clipboard.ContainsFileDropList())\n            {\n                type = ClipboardDataFormat.FILEDROP;\n            }\n            else if (Clipboard.ContainsImage())\n            {\n                type = ClipboardDataFormat.IMAGE;\n            }\n            else if (Clipboard.ContainsAudio())\n            {\n                type = ClipboardDataFormat.AUDIO;\n            }\n            else\n            {\n                IDataObject iData = Clipboard.GetDataObject();\n                if (iData.GetDataPresent(ClipboardDataFormat.USERDEFINED))\n                {\n                    type = ClipboardDataFormat.USERDEFINED;\n                } \n            }\n        }\n        catch (Exception)\n        {\n        }\n        return type;\n    }\n}\n```\n# **让窗体自动响应Clipboard的变化**\n让窗体自动响应Clipboard的变化这是一个非常酷的功能，实现这个需求并不难，大致分四步：\n* **Form类中引入三个函数**\n```\n// SetClipboardViewer 用于往观察链中添加一个窗口句柄，这个窗口就可成为观察链中的一员了，返回值指向下一个观察者\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern IntPtr SetClipboardViewer(IntPtr hwnd);\n\n//ChangeClipboardChain删除由hwnd指定的观察链成员，这是一个窗口句柄，第二个参数hWndNext是观察链中下一个窗口的句柄\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern IntPtr ChangeClipboardChain(IntPtr hwnd,IntPtr hWndNext);\n\n//SendMessage 发送消息\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern int SendMessage(IntPtr hwnd,int wMsg,IntPtr wParam,IntPtr lParam);\n\n//Clipboard内容变化消息\nconst int WM_DRAWCLIPBOARD = 0x308;\n//Clipboard观察链变化消息\nconst int WM_CHANGECBCHAIN = 0x30D;\n```\n* **Form_Load中把窗口添加到观察链中成为观察者，并保存下一个观察者的句柄**\n```\n//存放观察链中下一个窗口句柄   \nIntPtr NextClipHwnd;\nprivate void Form_Load(object sender, System.EventArgs e)\n{  \n     //获得观察链中下一个窗口句柄\n    NextClipHwnd=SetClipboardViewer(this.Handle);           \n}\n```\n* **重载WndProc方法，监视剪切板，并处理，并把剪切板变化的消息发送给下一个观察者**\n```\nprotected override void WndProc(ref System.Windows.Forms.Message m)\n{\n    switch(m.Msg)\n    {\n        case WM_DRAWCLIPBOARD:\n            //将WM_DRAWCLIPBOARD消息传递到下一个观察链中的窗口\n            SendMessage(NextClipHwnd,m.Msg,m.WParam,m.LParam);\n\n            //获取Clipboard内容，并处理\n            IDataObject iData = Clipboard.GetDataObject();\n            ...\n            ...\n            break;\n        default:\n            base.WndProc(ref m);\n            break;\n    }       \n}\n```\n* **Form_Closed中撤消自己定义的观察者，并通知下一个观察者**\n```\nprivate void Form_Closed(object sender, System.EventArgs e)\n{\n    //从观察链中删除本观察窗口\n    ChangeClipboardChain(this.Handle,NextClipHwnd);\n    //将变动消息WM_CHANGECBCHAIN消息传递到下一个观察链中的窗口\n    SendMessage(NextClipHwnd,WM_CHANGECBCHAIN,this.Handle,NextClipHwnd);  \n}\n```\n# **解决Clipboard冲突**\n* 待补充  \n  \n\n# **[[Demo](https://github.com/xiong-ang/CShape_SLN)]**\n* **界面**  \n![Alt text](https://github.com/xiong-ang/CShape_SLN/blob/master/Image/ClipBoard.PNG?raw=true)\n* **功能**  \n自动捕捉剪切板变化，并显示其中的文字、图片、文件以及自定义类型。","source":"_posts/clipboard.md","raw":"---\ntitle: C# Clipboard使用（How to Use Clipboard in C#）\ndate: 2017-10-29 21:41:31\ntags: [Clipboard, C#]\ncategories: C#\n---\n# **Clipboard引荐**\n> Clipboard，即剪切板，当我们同时按动Ctrl＋C时，选定的对象就被存放在了剪切板中了。如果刚才选定的对象是文件，那么在定盘符后，按动Ctrl＋V键或者点击菜单“粘贴”，这时选定的文件就保存到指定的磁盘上面了；如果选定的对象是图象，那么在打开“画图”之后，按动Ctrl＋V键或者点击菜单“粘贴”，图象就会显示在画图中了；如果是文本，那么在打开文本编辑器后，按动Ctrl＋V键或者点击菜单“粘贴”，这时文本就会显示在文本编辑器中。当然选定的对象还有许多种，这就不一一举例了。上面这些操作其实就是剪切板几种典型的操作。那么这些操作如果用Visual C＃来实现到底是个什么样子？  \n微软引入**Clipboard类**进行处理，我们先来介绍[MSDN](https://msdn.microsoft.com/zh-cn/library/system.windows.forms.clipboard.aspx)上的一个例子进入今天的讨论。 \n```\n/*\n下述代码放置文本数据进入Clipboard，并从中在提取出来。\nWinfrm代码界面元素包括：button1, button2, textBox1, textBox2\n*/\n\nprivate void button1_Click(object sender, System.EventArgs e) {\n    //button1_Click 调用SetDataObject将textBox1中选中的文字放入系统剪切板\n\n    if(textBox1.SelectedText != \"\")\n       Clipboard.SetDataObject(textBox1.SelectedText);\n    else\n       textBox2.Text = \"No text selected in textBox1\";\n }\n\n private void button2_Click(object sender, System.EventArgs e) {\n    //button2_Click 调用GetDataObject从系统剪切板提取数据\n\n    IDataObject iData = Clipboard.GetDataObject();\n\n    //判断是否有Text数据格式\n    if(iData.GetDataPresent(DataFormats.Text)) {\n       textBox2.Text = (String)iData.GetData(DataFormats.Text); \n    }\n    else {\n       textBox2.Text = \"Could not retrieve data off the clipboard.\";\n    }\n }\n``` \n从这个例子可以学到Clipboard的最基本用法：用SetDataObjec将数据存入系统剪切板；用GetDataObject从系统剪切板获取数据。  \n\n\n# **使用Clipboard保存/获取各种媒体**\n以实际操作的经验，剪切板不仅可以拷贝文字，还可以拷贝图片、文件，当然，通过程序，还可以让Clipboard保存音频和自定义类型。下面针对这些功能分别加以介绍。  \n* **Clipboard保存多媒体**\n```\nclass ClipboardDataFormat\n{\n    public static readonly string TEXT=\"Text\";\n    public static readonly string IMAGE=\"Image\";\n    public static readonly string FILEDROP=\"FileDrop\";\n    public static readonly string AUDIO=\"Audio\";\n    public static readonly string USERDEFINED=\"UserDefined\";\n}\n\nclass ClipboardProcesser\n{\n    public static void SetDataToClipboard(object o, string type)\n    {\n        try\n        {\n            if (o != null)\n            {\n                if (type == ClipboardDataFormat.TEXT)\n                {\n                    Clipboard.SetText((string)o);\n                }\n                if (type == ClipboardDataFormat.FILEDROP)\n                {\n                    Clipboard.SetFileDropList((System.Collections.Specialized.StringCollection)o);\n                }\n                if (type == ClipboardDataFormat.IMAGE)\n                {\n                    Clipboard.SetImage((System.Drawing.Image)o);\n                }\n                if (type == ClipboardDataFormat.AUDIO)\n                {\n                    Clipboard.SetAudio((Stream)o);\n                }\n                if (type == ClipboardDataFormat.USERDEFINED)\n                {\n                    MyItem item = (MyItem)o;\n                    item.ToClipboard();\n                }\n            }\n        }\n        catch (Exception)\n        {\n        }\n    }\n```\n```\n//自定义要往剪切板添加的类型\n[Serializable]\npublic class MyItem\n{\n    public string ItemName { get; set; }\n    public object ItemData { get; set; }\n    \n    public void ToClipboard()\n    {\n        DataFormats.Format format = DataFormats.GetFormat(ClipboardDataFormat.USERDEFINED);\n\n        IDataObject dataObj = new DataObject();\n        dataObj.SetData(format.Name, false, this);\n        Clipboard.SetDataObject(dataObj, false);\n    }\n}\n```\n* **Clipboard获取多媒体**\n```\npublic static object GetDataFromClipboardByType(string type)\n    {\n        object retObj = null;\n        try\n        {\n            if (type == ClipboardDataFormat.TEXT)\n            {\n                retObj = Clipboard.GetText();\n            }\n            if (type == ClipboardDataFormat.FILEDROP)\n            {\n                retObj = Clipboard.GetFileDropList();\n            }\n            if (type == ClipboardDataFormat.IMAGE)\n            {\n                retObj = Clipboard.GetImage();\n            }\n            if (type == ClipboardDataFormat.AUDIO)\n            {\n                retObj = Clipboard.GetAudioStream();\n            }\n            if (type == ClipboardDataFormat.USERDEFINED)\n            {\n                IDataObject iData = Clipboard.GetDataObject();\n                retObj = (MyItem)iData.GetData(type);\n            }                \n        }\n        catch (Exception)\n        {\n            retObj = null;\n        }\n        return retObj;\n    }\n\n    public static string GetDataTypeFromClipboard()\n    {\n        string type = string.Empty;\n\n        try\n        {\n            if (Clipboard.ContainsText())\n            {\n                type = ClipboardDataFormat.TEXT;\n            }\n            else if (Clipboard.ContainsFileDropList())\n            {\n                type = ClipboardDataFormat.FILEDROP;\n            }\n            else if (Clipboard.ContainsImage())\n            {\n                type = ClipboardDataFormat.IMAGE;\n            }\n            else if (Clipboard.ContainsAudio())\n            {\n                type = ClipboardDataFormat.AUDIO;\n            }\n            else\n            {\n                IDataObject iData = Clipboard.GetDataObject();\n                if (iData.GetDataPresent(ClipboardDataFormat.USERDEFINED))\n                {\n                    type = ClipboardDataFormat.USERDEFINED;\n                } \n            }\n        }\n        catch (Exception)\n        {\n        }\n        return type;\n    }\n}\n```\n# **让窗体自动响应Clipboard的变化**\n让窗体自动响应Clipboard的变化这是一个非常酷的功能，实现这个需求并不难，大致分四步：\n* **Form类中引入三个函数**\n```\n// SetClipboardViewer 用于往观察链中添加一个窗口句柄，这个窗口就可成为观察链中的一员了，返回值指向下一个观察者\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern IntPtr SetClipboardViewer(IntPtr hwnd);\n\n//ChangeClipboardChain删除由hwnd指定的观察链成员，这是一个窗口句柄，第二个参数hWndNext是观察链中下一个窗口的句柄\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern IntPtr ChangeClipboardChain(IntPtr hwnd,IntPtr hWndNext);\n\n//SendMessage 发送消息\n[System.Runtime.InteropServices.DllImport(\"user32\")]\nprivate static extern int SendMessage(IntPtr hwnd,int wMsg,IntPtr wParam,IntPtr lParam);\n\n//Clipboard内容变化消息\nconst int WM_DRAWCLIPBOARD = 0x308;\n//Clipboard观察链变化消息\nconst int WM_CHANGECBCHAIN = 0x30D;\n```\n* **Form_Load中把窗口添加到观察链中成为观察者，并保存下一个观察者的句柄**\n```\n//存放观察链中下一个窗口句柄   \nIntPtr NextClipHwnd;\nprivate void Form_Load(object sender, System.EventArgs e)\n{  \n     //获得观察链中下一个窗口句柄\n    NextClipHwnd=SetClipboardViewer(this.Handle);           \n}\n```\n* **重载WndProc方法，监视剪切板，并处理，并把剪切板变化的消息发送给下一个观察者**\n```\nprotected override void WndProc(ref System.Windows.Forms.Message m)\n{\n    switch(m.Msg)\n    {\n        case WM_DRAWCLIPBOARD:\n            //将WM_DRAWCLIPBOARD消息传递到下一个观察链中的窗口\n            SendMessage(NextClipHwnd,m.Msg,m.WParam,m.LParam);\n\n            //获取Clipboard内容，并处理\n            IDataObject iData = Clipboard.GetDataObject();\n            ...\n            ...\n            break;\n        default:\n            base.WndProc(ref m);\n            break;\n    }       \n}\n```\n* **Form_Closed中撤消自己定义的观察者，并通知下一个观察者**\n```\nprivate void Form_Closed(object sender, System.EventArgs e)\n{\n    //从观察链中删除本观察窗口\n    ChangeClipboardChain(this.Handle,NextClipHwnd);\n    //将变动消息WM_CHANGECBCHAIN消息传递到下一个观察链中的窗口\n    SendMessage(NextClipHwnd,WM_CHANGECBCHAIN,this.Handle,NextClipHwnd);  \n}\n```\n# **解决Clipboard冲突**\n* 待补充  \n  \n\n# **[[Demo](https://github.com/xiong-ang/CShape_SLN)]**\n* **界面**  \n![Alt text](https://github.com/xiong-ang/CShape_SLN/blob/master/Image/ClipBoard.PNG?raw=true)\n* **功能**  \n自动捕捉剪切板变化，并显示其中的文字、图片、文件以及自定义类型。","slug":"clipboard","published":1,"updated":"2017-10-29T13:44:26.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9ct93f50002kouig74utopr","content":"<h1 id=\"Clipboard引荐\"><a href=\"#Clipboard引荐\" class=\"headerlink\" title=\"Clipboard引荐\"></a><strong>Clipboard引荐</strong></h1><blockquote>\n<p>Clipboard，即剪切板，当我们同时按动Ctrl＋C时，选定的对象就被存放在了剪切板中了。如果刚才选定的对象是文件，那么在定盘符后，按动Ctrl＋V键或者点击菜单“粘贴”，这时选定的文件就保存到指定的磁盘上面了；如果选定的对象是图象，那么在打开“画图”之后，按动Ctrl＋V键或者点击菜单“粘贴”，图象就会显示在画图中了；如果是文本，那么在打开文本编辑器后，按动Ctrl＋V键或者点击菜单“粘贴”，这时文本就会显示在文本编辑器中。当然选定的对象还有许多种，这就不一一举例了。上面这些操作其实就是剪切板几种典型的操作。那么这些操作如果用Visual C＃来实现到底是个什么样子？<br>微软引入<strong>Clipboard类</strong>进行处理，我们先来介绍<a href=\"https://msdn.microsoft.com/zh-cn/library/system.windows.forms.clipboard.aspx\" target=\"_blank\" rel=\"external\">MSDN</a>上的一个例子进入今天的讨论。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">下述代码放置文本数据进入Clipboard，并从中在提取出来。</div><div class=\"line\">Winfrm代码界面元素包括：button1, button2, textBox1, textBox2</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">private void button1_Click(object sender, System.EventArgs e) &#123;</div><div class=\"line\">    //button1_Click 调用SetDataObject将textBox1中选中的文字放入系统剪切板</div><div class=\"line\"></div><div class=\"line\">    if(textBox1.SelectedText != &quot;&quot;)</div><div class=\"line\">       Clipboard.SetDataObject(textBox1.SelectedText);</div><div class=\"line\">    else</div><div class=\"line\">       textBox2.Text = &quot;No text selected in textBox1&quot;;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> private void button2_Click(object sender, System.EventArgs e) &#123;</div><div class=\"line\">    //button2_Click 调用GetDataObject从系统剪切板提取数据</div><div class=\"line\"></div><div class=\"line\">    IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\"></div><div class=\"line\">    //判断是否有Text数据格式</div><div class=\"line\">    if(iData.GetDataPresent(DataFormats.Text)) &#123;</div><div class=\"line\">       textBox2.Text = (String)iData.GetData(DataFormats.Text); </div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">       textBox2.Text = &quot;Could not retrieve data off the clipboard.&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">``` </div><div class=\"line\">从这个例子可以学到Clipboard的最基本用法：用SetDataObjec将数据存入系统剪切板；用GetDataObject从系统剪切板获取数据。  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"># **使用Clipboard保存/获取各种媒体**</div><div class=\"line\">以实际操作的经验，剪切板不仅可以拷贝文字，还可以拷贝图片、文件，当然，通过程序，还可以让Clipboard保存音频和自定义类型。下面针对这些功能分别加以介绍。  </div><div class=\"line\">* **Clipboard保存多媒体**</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>class ClipboardDataFormat<br>{<br>    public static readonly string TEXT=”Text”;<br>    public static readonly string IMAGE=”Image”;<br>    public static readonly string FILEDROP=”FileDrop”;<br>    public static readonly string AUDIO=”Audio”;<br>    public static readonly string USERDEFINED=”UserDefined”;<br>}</p>\n<p>class ClipboardProcesser<br>{<br>    public static void SetDataToClipboard(object o, string type)<br>    {<br>        try<br>        {<br>            if (o != null)<br>            {<br>                if (type == ClipboardDataFormat.TEXT)<br>                {<br>                    Clipboard.SetText((string)o);<br>                }<br>                if (type == ClipboardDataFormat.FILEDROP)<br>                {<br>                    Clipboard.SetFileDropList((System.Collections.Specialized.StringCollection)o);<br>                }<br>                if (type == ClipboardDataFormat.IMAGE)<br>                {<br>                    Clipboard.SetImage((System.Drawing.Image)o);<br>                }<br>                if (type == ClipboardDataFormat.AUDIO)<br>                {<br>                    Clipboard.SetAudio((Stream)o);<br>                }<br>                if (type == ClipboardDataFormat.USERDEFINED)<br>                {<br>                    MyItem item = (MyItem)o;<br>                    item.ToClipboard();<br>                }<br>            }<br>        }<br>        catch (Exception)<br>        {<br>        }<br>    }<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">```</div><div class=\"line\">//自定义要往剪切板添加的类型</div><div class=\"line\">[Serializable]</div><div class=\"line\">public class MyItem</div><div class=\"line\">&#123;</div><div class=\"line\">    public string ItemName &#123; get; set; &#125;</div><div class=\"line\">    public object ItemData &#123; get; set; &#125;</div><div class=\"line\">    </div><div class=\"line\">    public void ToClipboard()</div><div class=\"line\">    &#123;</div><div class=\"line\">        DataFormats.Format format = DataFormats.GetFormat(ClipboardDataFormat.USERDEFINED);</div><div class=\"line\"></div><div class=\"line\">        IDataObject dataObj = new DataObject();</div><div class=\"line\">        dataObj.SetData(format.Name, false, this);</div><div class=\"line\">        Clipboard.SetDataObject(dataObj, false);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>Clipboard获取多媒体</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static object GetDataFromClipboardByType(string type)</div><div class=\"line\">    &#123;</div><div class=\"line\">        object retObj = null;</div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            if (type == ClipboardDataFormat.TEXT)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetText();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.FILEDROP)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetFileDropList();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.IMAGE)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetImage();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.AUDIO)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetAudioStream();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.USERDEFINED)</div><div class=\"line\">            &#123;</div><div class=\"line\">                IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">                retObj = (MyItem)iData.GetData(type);</div><div class=\"line\">            &#125;                </div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception)</div><div class=\"line\">        &#123;</div><div class=\"line\">            retObj = null;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return retObj;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public static string GetDataTypeFromClipboard()</div><div class=\"line\">    &#123;</div><div class=\"line\">        string type = string.Empty;</div><div class=\"line\"></div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            if (Clipboard.ContainsText())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.TEXT;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsFileDropList())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.FILEDROP;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsImage())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.IMAGE;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsAudio())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.AUDIO;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else</div><div class=\"line\">            &#123;</div><div class=\"line\">                IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">                if (iData.GetDataPresent(ClipboardDataFormat.USERDEFINED))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    type = ClipboardDataFormat.USERDEFINED;</div><div class=\"line\">                &#125; </div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception)</div><div class=\"line\">        &#123;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return type;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"让窗体自动响应Clipboard的变化\"><a href=\"#让窗体自动响应Clipboard的变化\" class=\"headerlink\" title=\"让窗体自动响应Clipboard的变化\"></a><strong>让窗体自动响应Clipboard的变化</strong></h1><p>让窗体自动响应Clipboard的变化这是一个非常酷的功能，实现这个需求并不难，大致分四步：</p>\n<ul>\n<li><p><strong>Form类中引入三个函数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">// SetClipboardViewer 用于往观察链中添加一个窗口句柄，这个窗口就可成为观察链中的一员了，返回值指向下一个观察者</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern IntPtr SetClipboardViewer(IntPtr hwnd);</div><div class=\"line\"></div><div class=\"line\">//ChangeClipboardChain删除由hwnd指定的观察链成员，这是一个窗口句柄，第二个参数hWndNext是观察链中下一个窗口的句柄</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern IntPtr ChangeClipboardChain(IntPtr hwnd,IntPtr hWndNext);</div><div class=\"line\"></div><div class=\"line\">//SendMessage 发送消息</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern int SendMessage(IntPtr hwnd,int wMsg,IntPtr wParam,IntPtr lParam);</div><div class=\"line\"></div><div class=\"line\">//Clipboard内容变化消息</div><div class=\"line\">const int WM_DRAWCLIPBOARD = 0x308;</div><div class=\"line\">//Clipboard观察链变化消息</div><div class=\"line\">const int WM_CHANGECBCHAIN = 0x30D;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Form_Load中把窗口添加到观察链中成为观察者，并保存下一个观察者的句柄</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">//存放观察链中下一个窗口句柄   </div><div class=\"line\">IntPtr NextClipHwnd;</div><div class=\"line\">private void Form_Load(object sender, System.EventArgs e)</div><div class=\"line\">&#123;  </div><div class=\"line\">     //获得观察链中下一个窗口句柄</div><div class=\"line\">    NextClipHwnd=SetClipboardViewer(this.Handle);           </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>重载WndProc方法，监视剪切板，并处理，并把剪切板变化的消息发送给下一个观察者</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected override void WndProc(ref System.Windows.Forms.Message m)</div><div class=\"line\">&#123;</div><div class=\"line\">    switch(m.Msg)</div><div class=\"line\">    &#123;</div><div class=\"line\">        case WM_DRAWCLIPBOARD:</div><div class=\"line\">            //将WM_DRAWCLIPBOARD消息传递到下一个观察链中的窗口</div><div class=\"line\">            SendMessage(NextClipHwnd,m.Msg,m.WParam,m.LParam);</div><div class=\"line\"></div><div class=\"line\">            //获取Clipboard内容，并处理</div><div class=\"line\">            IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">            ...</div><div class=\"line\">            ...</div><div class=\"line\">            break;</div><div class=\"line\">        default:</div><div class=\"line\">            base.WndProc(ref m);</div><div class=\"line\">            break;</div><div class=\"line\">    &#125;       </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Form_Closed中撤消自己定义的观察者，并通知下一个观察者</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void Form_Closed(object sender, System.EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    //从观察链中删除本观察窗口</div><div class=\"line\">    ChangeClipboardChain(this.Handle,NextClipHwnd);</div><div class=\"line\">    //将变动消息WM_CHANGECBCHAIN消息传递到下一个观察链中的窗口</div><div class=\"line\">    SendMessage(NextClipHwnd,WM_CHANGECBCHAIN,this.Handle,NextClipHwnd);  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"解决Clipboard冲突\"><a href=\"#解决Clipboard冲突\" class=\"headerlink\" title=\"解决Clipboard冲突\"></a><strong>解决Clipboard冲突</strong></h1><ul>\n<li>待补充  </li>\n</ul>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"[Demo]\"></a><strong>[<a href=\"https://github.com/xiong-ang/CShape_SLN\" target=\"_blank\" rel=\"external\">Demo</a>]</strong></h1><ul>\n<li><strong>界面</strong><br><img src=\"https://github.com/xiong-ang/CShape_SLN/blob/master/Image/ClipBoard.PNG?raw=true\" alt=\"Alt text\"></li>\n<li><strong>功能</strong><br>自动捕捉剪切板变化，并显示其中的文字、图片、文件以及自定义类型。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Clipboard引荐\"><a href=\"#Clipboard引荐\" class=\"headerlink\" title=\"Clipboard引荐\"></a><strong>Clipboard引荐</strong></h1><blockquote>\n<p>Clipboard，即剪切板，当我们同时按动Ctrl＋C时，选定的对象就被存放在了剪切板中了。如果刚才选定的对象是文件，那么在定盘符后，按动Ctrl＋V键或者点击菜单“粘贴”，这时选定的文件就保存到指定的磁盘上面了；如果选定的对象是图象，那么在打开“画图”之后，按动Ctrl＋V键或者点击菜单“粘贴”，图象就会显示在画图中了；如果是文本，那么在打开文本编辑器后，按动Ctrl＋V键或者点击菜单“粘贴”，这时文本就会显示在文本编辑器中。当然选定的对象还有许多种，这就不一一举例了。上面这些操作其实就是剪切板几种典型的操作。那么这些操作如果用Visual C＃来实现到底是个什么样子？<br>微软引入<strong>Clipboard类</strong>进行处理，我们先来介绍<a href=\"https://msdn.microsoft.com/zh-cn/library/system.windows.forms.clipboard.aspx\" target=\"_blank\" rel=\"external\">MSDN</a>上的一个例子进入今天的讨论。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*</div><div class=\"line\">下述代码放置文本数据进入Clipboard，并从中在提取出来。</div><div class=\"line\">Winfrm代码界面元素包括：button1, button2, textBox1, textBox2</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">private void button1_Click(object sender, System.EventArgs e) &#123;</div><div class=\"line\">    //button1_Click 调用SetDataObject将textBox1中选中的文字放入系统剪切板</div><div class=\"line\"></div><div class=\"line\">    if(textBox1.SelectedText != &quot;&quot;)</div><div class=\"line\">       Clipboard.SetDataObject(textBox1.SelectedText);</div><div class=\"line\">    else</div><div class=\"line\">       textBox2.Text = &quot;No text selected in textBox1&quot;;</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> private void button2_Click(object sender, System.EventArgs e) &#123;</div><div class=\"line\">    //button2_Click 调用GetDataObject从系统剪切板提取数据</div><div class=\"line\"></div><div class=\"line\">    IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\"></div><div class=\"line\">    //判断是否有Text数据格式</div><div class=\"line\">    if(iData.GetDataPresent(DataFormats.Text)) &#123;</div><div class=\"line\">       textBox2.Text = (String)iData.GetData(DataFormats.Text); </div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">       textBox2.Text = &quot;Could not retrieve data off the clipboard.&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\"> &#125;</div><div class=\"line\">``` </div><div class=\"line\">从这个例子可以学到Clipboard的最基本用法：用SetDataObjec将数据存入系统剪切板；用GetDataObject从系统剪切板获取数据。  </div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"># **使用Clipboard保存/获取各种媒体**</div><div class=\"line\">以实际操作的经验，剪切板不仅可以拷贝文字，还可以拷贝图片、文件，当然，通过程序，还可以让Clipboard保存音频和自定义类型。下面针对这些功能分别加以介绍。  </div><div class=\"line\">* **Clipboard保存多媒体**</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>class ClipboardDataFormat<br>{<br>    public static readonly string TEXT=”Text”;<br>    public static readonly string IMAGE=”Image”;<br>    public static readonly string FILEDROP=”FileDrop”;<br>    public static readonly string AUDIO=”Audio”;<br>    public static readonly string USERDEFINED=”UserDefined”;<br>}</p>\n<p>class ClipboardProcesser<br>{<br>    public static void SetDataToClipboard(object o, string type)<br>    {<br>        try<br>        {<br>            if (o != null)<br>            {<br>                if (type == ClipboardDataFormat.TEXT)<br>                {<br>                    Clipboard.SetText((string)o);<br>                }<br>                if (type == ClipboardDataFormat.FILEDROP)<br>                {<br>                    Clipboard.SetFileDropList((System.Collections.Specialized.StringCollection)o);<br>                }<br>                if (type == ClipboardDataFormat.IMAGE)<br>                {<br>                    Clipboard.SetImage((System.Drawing.Image)o);<br>                }<br>                if (type == ClipboardDataFormat.AUDIO)<br>                {<br>                    Clipboard.SetAudio((Stream)o);<br>                }<br>                if (type == ClipboardDataFormat.USERDEFINED)<br>                {<br>                    MyItem item = (MyItem)o;<br>                    item.ToClipboard();<br>                }<br>            }<br>        }<br>        catch (Exception)<br>        {<br>        }<br>    }<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">```</div><div class=\"line\">//自定义要往剪切板添加的类型</div><div class=\"line\">[Serializable]</div><div class=\"line\">public class MyItem</div><div class=\"line\">&#123;</div><div class=\"line\">    public string ItemName &#123; get; set; &#125;</div><div class=\"line\">    public object ItemData &#123; get; set; &#125;</div><div class=\"line\">    </div><div class=\"line\">    public void ToClipboard()</div><div class=\"line\">    &#123;</div><div class=\"line\">        DataFormats.Format format = DataFormats.GetFormat(ClipboardDataFormat.USERDEFINED);</div><div class=\"line\"></div><div class=\"line\">        IDataObject dataObj = new DataObject();</div><div class=\"line\">        dataObj.SetData(format.Name, false, this);</div><div class=\"line\">        Clipboard.SetDataObject(dataObj, false);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>Clipboard获取多媒体</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static object GetDataFromClipboardByType(string type)</div><div class=\"line\">    &#123;</div><div class=\"line\">        object retObj = null;</div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            if (type == ClipboardDataFormat.TEXT)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetText();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.FILEDROP)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetFileDropList();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.IMAGE)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetImage();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.AUDIO)</div><div class=\"line\">            &#123;</div><div class=\"line\">                retObj = Clipboard.GetAudioStream();</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (type == ClipboardDataFormat.USERDEFINED)</div><div class=\"line\">            &#123;</div><div class=\"line\">                IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">                retObj = (MyItem)iData.GetData(type);</div><div class=\"line\">            &#125;                </div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception)</div><div class=\"line\">        &#123;</div><div class=\"line\">            retObj = null;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return retObj;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    public static string GetDataTypeFromClipboard()</div><div class=\"line\">    &#123;</div><div class=\"line\">        string type = string.Empty;</div><div class=\"line\"></div><div class=\"line\">        try</div><div class=\"line\">        &#123;</div><div class=\"line\">            if (Clipboard.ContainsText())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.TEXT;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsFileDropList())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.FILEDROP;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsImage())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.IMAGE;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (Clipboard.ContainsAudio())</div><div class=\"line\">            &#123;</div><div class=\"line\">                type = ClipboardDataFormat.AUDIO;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else</div><div class=\"line\">            &#123;</div><div class=\"line\">                IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">                if (iData.GetDataPresent(ClipboardDataFormat.USERDEFINED))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    type = ClipboardDataFormat.USERDEFINED;</div><div class=\"line\">                &#125; </div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (Exception)</div><div class=\"line\">        &#123;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return type;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"让窗体自动响应Clipboard的变化\"><a href=\"#让窗体自动响应Clipboard的变化\" class=\"headerlink\" title=\"让窗体自动响应Clipboard的变化\"></a><strong>让窗体自动响应Clipboard的变化</strong></h1><p>让窗体自动响应Clipboard的变化这是一个非常酷的功能，实现这个需求并不难，大致分四步：</p>\n<ul>\n<li><p><strong>Form类中引入三个函数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">// SetClipboardViewer 用于往观察链中添加一个窗口句柄，这个窗口就可成为观察链中的一员了，返回值指向下一个观察者</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern IntPtr SetClipboardViewer(IntPtr hwnd);</div><div class=\"line\"></div><div class=\"line\">//ChangeClipboardChain删除由hwnd指定的观察链成员，这是一个窗口句柄，第二个参数hWndNext是观察链中下一个窗口的句柄</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern IntPtr ChangeClipboardChain(IntPtr hwnd,IntPtr hWndNext);</div><div class=\"line\"></div><div class=\"line\">//SendMessage 发送消息</div><div class=\"line\">[System.Runtime.InteropServices.DllImport(&quot;user32&quot;)]</div><div class=\"line\">private static extern int SendMessage(IntPtr hwnd,int wMsg,IntPtr wParam,IntPtr lParam);</div><div class=\"line\"></div><div class=\"line\">//Clipboard内容变化消息</div><div class=\"line\">const int WM_DRAWCLIPBOARD = 0x308;</div><div class=\"line\">//Clipboard观察链变化消息</div><div class=\"line\">const int WM_CHANGECBCHAIN = 0x30D;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Form_Load中把窗口添加到观察链中成为观察者，并保存下一个观察者的句柄</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">//存放观察链中下一个窗口句柄   </div><div class=\"line\">IntPtr NextClipHwnd;</div><div class=\"line\">private void Form_Load(object sender, System.EventArgs e)</div><div class=\"line\">&#123;  </div><div class=\"line\">     //获得观察链中下一个窗口句柄</div><div class=\"line\">    NextClipHwnd=SetClipboardViewer(this.Handle);           </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>重载WndProc方法，监视剪切板，并处理，并把剪切板变化的消息发送给下一个观察者</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected override void WndProc(ref System.Windows.Forms.Message m)</div><div class=\"line\">&#123;</div><div class=\"line\">    switch(m.Msg)</div><div class=\"line\">    &#123;</div><div class=\"line\">        case WM_DRAWCLIPBOARD:</div><div class=\"line\">            //将WM_DRAWCLIPBOARD消息传递到下一个观察链中的窗口</div><div class=\"line\">            SendMessage(NextClipHwnd,m.Msg,m.WParam,m.LParam);</div><div class=\"line\"></div><div class=\"line\">            //获取Clipboard内容，并处理</div><div class=\"line\">            IDataObject iData = Clipboard.GetDataObject();</div><div class=\"line\">            ...</div><div class=\"line\">            ...</div><div class=\"line\">            break;</div><div class=\"line\">        default:</div><div class=\"line\">            base.WndProc(ref m);</div><div class=\"line\">            break;</div><div class=\"line\">    &#125;       </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Form_Closed中撤消自己定义的观察者，并通知下一个观察者</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void Form_Closed(object sender, System.EventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">    //从观察链中删除本观察窗口</div><div class=\"line\">    ChangeClipboardChain(this.Handle,NextClipHwnd);</div><div class=\"line\">    //将变动消息WM_CHANGECBCHAIN消息传递到下一个观察链中的窗口</div><div class=\"line\">    SendMessage(NextClipHwnd,WM_CHANGECBCHAIN,this.Handle,NextClipHwnd);  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"解决Clipboard冲突\"><a href=\"#解决Clipboard冲突\" class=\"headerlink\" title=\"解决Clipboard冲突\"></a><strong>解决Clipboard冲突</strong></h1><ul>\n<li>待补充  </li>\n</ul>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"[Demo]\"></a><strong>[<a href=\"https://github.com/xiong-ang/CShape_SLN\" target=\"_blank\" rel=\"external\">Demo</a>]</strong></h1><ul>\n<li><strong>界面</strong><br><img src=\"https://github.com/xiong-ang/CShape_SLN/blob/master/Image/ClipBoard.PNG?raw=true\" alt=\"Alt text\"></li>\n<li><strong>功能</strong><br>自动捕捉剪切板变化，并显示其中的文字、图片、文件以及自定义类型。</li>\n</ul>\n"},{"title":"C#中实现控件拖拽效果（How to DragDrop Control in C#）","date":"2017-10-29T13:41:48.000Z","_content":"> 当产品间需要交互实现数据传递，或产品需要从外部导入文件时，通过控件拖拽来实现是个不错的选择。在UI上支持控件拖拽，可极大提升用户体验。  \n拖拽本身并不神秘，它的本质实际是一个数据交换的过程。控件接受从其他地方来的数据，并进行处理。数据交换有多种方法，Windows中剪贴板可能就是用的最多，但最不被注意的一种方法。  \n下面介绍用C#实现控件拖拽，并通过剪切板交换数据。  \n\n# **控件拖拽触发/响应函数**\n对于拖拽的对象，需要在**MouseDown**或**ItemDrag**中调用**DoDragDrop**，传递要拖拽的数据对象并触发拖拽。总的来说，当用户调用DoDragDrop方法后，就进入到一个循环中。 循环会一直跟踪鼠标，检查鼠标所在的窗体是否实现IDropTarget，如果实现了则：调用**DropEnter**，并通过调用GiveFeedBack来显示效果；鼠标在控件上时，调用**DropOver**，也是通过GiveFeedBack来显示效果；在拖拽过程中，键盘或鼠标按键发生变化，可以通过QueryContinueDrag来检查是否能继续操作，根据不同的返回结果，调用**DropOver**或**DropLeave**；鼠标释放时触发**DragDrop**事件，执行拖拽逻辑。\n* **DragEnter、DragOver、DragLeave事件**   \n**触发：** 当用鼠标拖拽一个对象到控件的窗口时，首先触发DragEnter，然后是DragOver，拖放对象悬浮于拖放区域，在拖放区域内移动时多次触发DragOver，当离开窗体时触发DragLeave。  \n**作用：** 设置判断对象是否是要接受的类型以及鼠标的样式。\n* **DragDrop事件**  \n**触发：** 当用户拖拽对象到控件上，并释放时触发。  \n**作用：** 接受拖拽数据，实现拖拽逻辑  \n\n# **实现控件拖拽的典型流程**\n1. **设置AllowDrop**  \n在对一个控件进行拖拽编程时，我们必须把AllowDrop属性设置为True\n2. **拖动对象触发DragDrop**  \n```\nprivate void listBox1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)\n{\n\tthis.listBox1.DoDragDrop(\"Drag Data\", DragDropEffects.Move);\n}\n```\n3. **拖到目标响应DragDrop**  \n```\nprivate void listBox2_DragEnter(object sender, System.Windows.Forms.DragEventArgs e)\n{\n\tif (e.Data.GetDataPresent(DataFormats.Text))\n\t{\n\t\t//设置DragDrop效果\n\t\te.Effect = DragDropEffects.Move;\n\t}\n}\n\nprivate void listBox2_DragDrop(object sender, System.Windows.Forms.DragEventArgs e)\n{\n\t//执行DragDrop逻辑\n\tthis.listBox2.Items.Add(e.Data.GetData(DataFormats.Text));\n\tthis.listBox1.Items.Remove(e.Data.GetData(DataFormats.Text));\n}\n```  \n\n# **控件拖拽的参数**\n```\npublic DragDropEffects DoDragDrop ( Object data,DragDropEffects allowedEffects)\n```\n* data：户所要拖动的数据内容。必须将所要拖动的内容传入到这个方法的第一个参数位置。并不是必须得，比如在不同应用间传递数据时，可以借由[剪切板](https://xiong-ang.github.io/2017/10/29/clipboard/)。  \n# **控件拖拽的特效**\n控件拖拽的特效由DragDropEffects枚举来指定。\n* **DragDropEffects说明**  \n\n成员名称 | 说明\n- | :-\nAll\t| Copy、Move 和 Scroll 效果的组合  \nCopy | 将拖动源中的数据复制到放置目标，图标为一个框右上角带+\nLink | 将拖动源中的数据链接到放置目标，图标为数据快捷图标\nMove | 将拖动源的数据移动到放置目标，图标为一个框\nNone | 放置目标不接受该数据，图标为禁止标识\nScroll | 拖动时，如果有滚动条目，可以滚动目标，以定位在目标中当前不可见的某个放置位置  \n\n# **[[Demo](https://github.com/xiong-ang/CShape_SLN)]**\n* **界面**  \n![](https://github.com/xiong-ang/CShape_SLN/blob/master/Image/DragDrop.PNG?raw=true)\n* **功能**  \n实现文件的拖拽以及应用程序之间的拖拽。","source":"_posts/dragdrop.md","raw":"---\ntitle: C#中实现控件拖拽效果（How to DragDrop Control in C#）\ndate: 2017-10-29 21:41:48\ntags: [DragDrop, C#]\ncategories: C#\n---\n> 当产品间需要交互实现数据传递，或产品需要从外部导入文件时，通过控件拖拽来实现是个不错的选择。在UI上支持控件拖拽，可极大提升用户体验。  \n拖拽本身并不神秘，它的本质实际是一个数据交换的过程。控件接受从其他地方来的数据，并进行处理。数据交换有多种方法，Windows中剪贴板可能就是用的最多，但最不被注意的一种方法。  \n下面介绍用C#实现控件拖拽，并通过剪切板交换数据。  \n\n# **控件拖拽触发/响应函数**\n对于拖拽的对象，需要在**MouseDown**或**ItemDrag**中调用**DoDragDrop**，传递要拖拽的数据对象并触发拖拽。总的来说，当用户调用DoDragDrop方法后，就进入到一个循环中。 循环会一直跟踪鼠标，检查鼠标所在的窗体是否实现IDropTarget，如果实现了则：调用**DropEnter**，并通过调用GiveFeedBack来显示效果；鼠标在控件上时，调用**DropOver**，也是通过GiveFeedBack来显示效果；在拖拽过程中，键盘或鼠标按键发生变化，可以通过QueryContinueDrag来检查是否能继续操作，根据不同的返回结果，调用**DropOver**或**DropLeave**；鼠标释放时触发**DragDrop**事件，执行拖拽逻辑。\n* **DragEnter、DragOver、DragLeave事件**   \n**触发：** 当用鼠标拖拽一个对象到控件的窗口时，首先触发DragEnter，然后是DragOver，拖放对象悬浮于拖放区域，在拖放区域内移动时多次触发DragOver，当离开窗体时触发DragLeave。  \n**作用：** 设置判断对象是否是要接受的类型以及鼠标的样式。\n* **DragDrop事件**  \n**触发：** 当用户拖拽对象到控件上，并释放时触发。  \n**作用：** 接受拖拽数据，实现拖拽逻辑  \n\n# **实现控件拖拽的典型流程**\n1. **设置AllowDrop**  \n在对一个控件进行拖拽编程时，我们必须把AllowDrop属性设置为True\n2. **拖动对象触发DragDrop**  \n```\nprivate void listBox1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)\n{\n\tthis.listBox1.DoDragDrop(\"Drag Data\", DragDropEffects.Move);\n}\n```\n3. **拖到目标响应DragDrop**  \n```\nprivate void listBox2_DragEnter(object sender, System.Windows.Forms.DragEventArgs e)\n{\n\tif (e.Data.GetDataPresent(DataFormats.Text))\n\t{\n\t\t//设置DragDrop效果\n\t\te.Effect = DragDropEffects.Move;\n\t}\n}\n\nprivate void listBox2_DragDrop(object sender, System.Windows.Forms.DragEventArgs e)\n{\n\t//执行DragDrop逻辑\n\tthis.listBox2.Items.Add(e.Data.GetData(DataFormats.Text));\n\tthis.listBox1.Items.Remove(e.Data.GetData(DataFormats.Text));\n}\n```  \n\n# **控件拖拽的参数**\n```\npublic DragDropEffects DoDragDrop ( Object data,DragDropEffects allowedEffects)\n```\n* data：户所要拖动的数据内容。必须将所要拖动的内容传入到这个方法的第一个参数位置。并不是必须得，比如在不同应用间传递数据时，可以借由[剪切板](https://xiong-ang.github.io/2017/10/29/clipboard/)。  \n# **控件拖拽的特效**\n控件拖拽的特效由DragDropEffects枚举来指定。\n* **DragDropEffects说明**  \n\n成员名称 | 说明\n- | :-\nAll\t| Copy、Move 和 Scroll 效果的组合  \nCopy | 将拖动源中的数据复制到放置目标，图标为一个框右上角带+\nLink | 将拖动源中的数据链接到放置目标，图标为数据快捷图标\nMove | 将拖动源的数据移动到放置目标，图标为一个框\nNone | 放置目标不接受该数据，图标为禁止标识\nScroll | 拖动时，如果有滚动条目，可以滚动目标，以定位在目标中当前不可见的某个放置位置  \n\n# **[[Demo](https://github.com/xiong-ang/CShape_SLN)]**\n* **界面**  \n![](https://github.com/xiong-ang/CShape_SLN/blob/master/Image/DragDrop.PNG?raw=true)\n* **功能**  \n实现文件的拖拽以及应用程序之间的拖拽。","slug":"dragdrop","published":1,"updated":"2017-10-29T13:51:24.777Z","_id":"cj9ct93g40006kouincnas6dr","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>当产品间需要交互实现数据传递，或产品需要从外部导入文件时，通过控件拖拽来实现是个不错的选择。在UI上支持控件拖拽，可极大提升用户体验。<br>拖拽本身并不神秘，它的本质实际是一个数据交换的过程。控件接受从其他地方来的数据，并进行处理。数据交换有多种方法，Windows中剪贴板可能就是用的最多，但最不被注意的一种方法。<br>下面介绍用C#实现控件拖拽，并通过剪切板交换数据。  </p>\n</blockquote>\n<h1 id=\"控件拖拽触发-响应函数\"><a href=\"#控件拖拽触发-响应函数\" class=\"headerlink\" title=\"控件拖拽触发/响应函数\"></a><strong>控件拖拽触发/响应函数</strong></h1><p>对于拖拽的对象，需要在<strong>MouseDown</strong>或<strong>ItemDrag</strong>中调用<strong>DoDragDrop</strong>，传递要拖拽的数据对象并触发拖拽。总的来说，当用户调用DoDragDrop方法后，就进入到一个循环中。 循环会一直跟踪鼠标，检查鼠标所在的窗体是否实现IDropTarget，如果实现了则：调用<strong>DropEnter</strong>，并通过调用GiveFeedBack来显示效果；鼠标在控件上时，调用<strong>DropOver</strong>，也是通过GiveFeedBack来显示效果；在拖拽过程中，键盘或鼠标按键发生变化，可以通过QueryContinueDrag来检查是否能继续操作，根据不同的返回结果，调用<strong>DropOver</strong>或<strong>DropLeave</strong>；鼠标释放时触发<strong>DragDrop</strong>事件，执行拖拽逻辑。</p>\n<ul>\n<li><strong>DragEnter、DragOver、DragLeave事件</strong><br><strong>触发：</strong> 当用鼠标拖拽一个对象到控件的窗口时，首先触发DragEnter，然后是DragOver，拖放对象悬浮于拖放区域，在拖放区域内移动时多次触发DragOver，当离开窗体时触发DragLeave。<br><strong>作用：</strong> 设置判断对象是否是要接受的类型以及鼠标的样式。</li>\n<li><strong>DragDrop事件</strong><br><strong>触发：</strong> 当用户拖拽对象到控件上，并释放时触发。<br><strong>作用：</strong> 接受拖拽数据，实现拖拽逻辑  </li>\n</ul>\n<h1 id=\"实现控件拖拽的典型流程\"><a href=\"#实现控件拖拽的典型流程\" class=\"headerlink\" title=\"实现控件拖拽的典型流程\"></a><strong>实现控件拖拽的典型流程</strong></h1><ol>\n<li><strong>设置AllowDrop</strong><br>在对一个控件进行拖拽编程时，我们必须把AllowDrop属性设置为True</li>\n<li><p><strong>拖动对象触发DragDrop</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void listBox1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\tthis.listBox1.DoDragDrop(&quot;Drag Data&quot;, DragDropEffects.Move);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>拖到目标响应DragDrop</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void listBox2_DragEnter(object sender, System.Windows.Forms.DragEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\tif (e.Data.GetDataPresent(DataFormats.Text))</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t//设置DragDrop效果</div><div class=\"line\">\t\te.Effect = DragDropEffects.Move;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private void listBox2_DragDrop(object sender, System.Windows.Forms.DragEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\t//执行DragDrop逻辑</div><div class=\"line\">\tthis.listBox2.Items.Add(e.Data.GetData(DataFormats.Text));</div><div class=\"line\">\tthis.listBox1.Items.Remove(e.Data.GetData(DataFormats.Text));</div><div class=\"line\">&#125;</div><div class=\"line\">```  </div><div class=\"line\"></div><div class=\"line\"># **控件拖拽的参数**</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>public DragDropEffects DoDragDrop ( Object data,DragDropEffects allowedEffects)<br>```</p>\n<ul>\n<li>data：户所要拖动的数据内容。必须将所要拖动的内容传入到这个方法的第一个参数位置。并不是必须得，比如在不同应用间传递数据时，可以借由<a href=\"https://xiong-ang.github.io/2017/10/29/clipboard/\" target=\"_blank\" rel=\"external\">剪切板</a>。  <h1 id=\"控件拖拽的特效\"><a href=\"#控件拖拽的特效\" class=\"headerlink\" title=\"控件拖拽的特效\"></a><strong>控件拖拽的特效</strong></h1>控件拖拽的特效由DragDropEffects枚举来指定。</li>\n<li><strong>DragDropEffects说明</strong>  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>成员名称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>All</td>\n<td style=\"text-align:left\">Copy、Move 和 Scroll 效果的组合  </td>\n</tr>\n<tr>\n<td>Copy</td>\n<td style=\"text-align:left\">将拖动源中的数据复制到放置目标，图标为一个框右上角带+</td>\n</tr>\n<tr>\n<td>Link</td>\n<td style=\"text-align:left\">将拖动源中的数据链接到放置目标，图标为数据快捷图标</td>\n</tr>\n<tr>\n<td>Move</td>\n<td style=\"text-align:left\">将拖动源的数据移动到放置目标，图标为一个框</td>\n</tr>\n<tr>\n<td>None</td>\n<td style=\"text-align:left\">放置目标不接受该数据，图标为禁止标识</td>\n</tr>\n<tr>\n<td>Scroll</td>\n<td style=\"text-align:left\">拖动时，如果有滚动条目，可以滚动目标，以定位在目标中当前不可见的某个放置位置  </td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"[Demo]\"></a><strong>[<a href=\"https://github.com/xiong-ang/CShape_SLN\" target=\"_blank\" rel=\"external\">Demo</a>]</strong></h1><ul>\n<li><strong>界面</strong><br><img src=\"https://github.com/xiong-ang/CShape_SLN/blob/master/Image/DragDrop.PNG?raw=true\" alt=\"\"></li>\n<li><strong>功能</strong><br>实现文件的拖拽以及应用程序之间的拖拽。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>当产品间需要交互实现数据传递，或产品需要从外部导入文件时，通过控件拖拽来实现是个不错的选择。在UI上支持控件拖拽，可极大提升用户体验。<br>拖拽本身并不神秘，它的本质实际是一个数据交换的过程。控件接受从其他地方来的数据，并进行处理。数据交换有多种方法，Windows中剪贴板可能就是用的最多，但最不被注意的一种方法。<br>下面介绍用C#实现控件拖拽，并通过剪切板交换数据。  </p>\n</blockquote>\n<h1 id=\"控件拖拽触发-响应函数\"><a href=\"#控件拖拽触发-响应函数\" class=\"headerlink\" title=\"控件拖拽触发/响应函数\"></a><strong>控件拖拽触发/响应函数</strong></h1><p>对于拖拽的对象，需要在<strong>MouseDown</strong>或<strong>ItemDrag</strong>中调用<strong>DoDragDrop</strong>，传递要拖拽的数据对象并触发拖拽。总的来说，当用户调用DoDragDrop方法后，就进入到一个循环中。 循环会一直跟踪鼠标，检查鼠标所在的窗体是否实现IDropTarget，如果实现了则：调用<strong>DropEnter</strong>，并通过调用GiveFeedBack来显示效果；鼠标在控件上时，调用<strong>DropOver</strong>，也是通过GiveFeedBack来显示效果；在拖拽过程中，键盘或鼠标按键发生变化，可以通过QueryContinueDrag来检查是否能继续操作，根据不同的返回结果，调用<strong>DropOver</strong>或<strong>DropLeave</strong>；鼠标释放时触发<strong>DragDrop</strong>事件，执行拖拽逻辑。</p>\n<ul>\n<li><strong>DragEnter、DragOver、DragLeave事件</strong><br><strong>触发：</strong> 当用鼠标拖拽一个对象到控件的窗口时，首先触发DragEnter，然后是DragOver，拖放对象悬浮于拖放区域，在拖放区域内移动时多次触发DragOver，当离开窗体时触发DragLeave。<br><strong>作用：</strong> 设置判断对象是否是要接受的类型以及鼠标的样式。</li>\n<li><strong>DragDrop事件</strong><br><strong>触发：</strong> 当用户拖拽对象到控件上，并释放时触发。<br><strong>作用：</strong> 接受拖拽数据，实现拖拽逻辑  </li>\n</ul>\n<h1 id=\"实现控件拖拽的典型流程\"><a href=\"#实现控件拖拽的典型流程\" class=\"headerlink\" title=\"实现控件拖拽的典型流程\"></a><strong>实现控件拖拽的典型流程</strong></h1><ol>\n<li><strong>设置AllowDrop</strong><br>在对一个控件进行拖拽编程时，我们必须把AllowDrop属性设置为True</li>\n<li><p><strong>拖动对象触发DragDrop</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void listBox1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\tthis.listBox1.DoDragDrop(&quot;Drag Data&quot;, DragDropEffects.Move);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong>拖到目标响应DragDrop</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">private void listBox2_DragEnter(object sender, System.Windows.Forms.DragEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\tif (e.Data.GetDataPresent(DataFormats.Text))</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t//设置DragDrop效果</div><div class=\"line\">\t\te.Effect = DragDropEffects.Move;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">private void listBox2_DragDrop(object sender, System.Windows.Forms.DragEventArgs e)</div><div class=\"line\">&#123;</div><div class=\"line\">\t//执行DragDrop逻辑</div><div class=\"line\">\tthis.listBox2.Items.Add(e.Data.GetData(DataFormats.Text));</div><div class=\"line\">\tthis.listBox1.Items.Remove(e.Data.GetData(DataFormats.Text));</div><div class=\"line\">&#125;</div><div class=\"line\">```  </div><div class=\"line\"></div><div class=\"line\"># **控件拖拽的参数**</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>public DragDropEffects DoDragDrop ( Object data,DragDropEffects allowedEffects)<br>```</p>\n<ul>\n<li>data：户所要拖动的数据内容。必须将所要拖动的内容传入到这个方法的第一个参数位置。并不是必须得，比如在不同应用间传递数据时，可以借由<a href=\"https://xiong-ang.github.io/2017/10/29/clipboard/\" target=\"_blank\" rel=\"external\">剪切板</a>。  <h1 id=\"控件拖拽的特效\"><a href=\"#控件拖拽的特效\" class=\"headerlink\" title=\"控件拖拽的特效\"></a><strong>控件拖拽的特效</strong></h1>控件拖拽的特效由DragDropEffects枚举来指定。</li>\n<li><strong>DragDropEffects说明</strong>  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>成员名称</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>All</td>\n<td style=\"text-align:left\">Copy、Move 和 Scroll 效果的组合  </td>\n</tr>\n<tr>\n<td>Copy</td>\n<td style=\"text-align:left\">将拖动源中的数据复制到放置目标，图标为一个框右上角带+</td>\n</tr>\n<tr>\n<td>Link</td>\n<td style=\"text-align:left\">将拖动源中的数据链接到放置目标，图标为数据快捷图标</td>\n</tr>\n<tr>\n<td>Move</td>\n<td style=\"text-align:left\">将拖动源的数据移动到放置目标，图标为一个框</td>\n</tr>\n<tr>\n<td>None</td>\n<td style=\"text-align:left\">放置目标不接受该数据，图标为禁止标识</td>\n</tr>\n<tr>\n<td>Scroll</td>\n<td style=\"text-align:left\">拖动时，如果有滚动条目，可以滚动目标，以定位在目标中当前不可见的某个放置位置  </td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"Demo\"><a href=\"#Demo\" class=\"headerlink\" title=\"[Demo]\"></a><strong>[<a href=\"https://github.com/xiong-ang/CShape_SLN\" target=\"_blank\" rel=\"external\">Demo</a>]</strong></h1><ul>\n<li><strong>界面</strong><br><img src=\"https://github.com/xiong-ang/CShape_SLN/blob/master/Image/DragDrop.PNG?raw=true\" alt=\"\"></li>\n<li><strong>功能</strong><br>实现文件的拖拽以及应用程序之间的拖拽。</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9ct93er0000koui7v7svah5","category_id":"cj9ct93fu0004koui40jk3ust","_id":"cj9ct93gd0009koui4ekyirza"},{"post_id":"cj9ct93f50002kouig74utopr","category_id":"cj9ct93gb0007kouit8qez2af","_id":"cj9ct93gk000ekouig9copq5l"},{"post_id":"cj9ct93g40006kouincnas6dr","category_id":"cj9ct93gb0007kouit8qez2af","_id":"cj9ct93gm000gkouihjemquj3"}],"PostTag":[{"post_id":"cj9ct93er0000koui7v7svah5","tag_id":"cj9ct93g10005kouiiv3ml659","_id":"cj9ct93gi000ckoui0ucj0nfb"},{"post_id":"cj9ct93er0000koui7v7svah5","tag_id":"cj9ct93gc0008kouimr5egiyo","_id":"cj9ct93gk000dkouicamchxlh"},{"post_id":"cj9ct93f50002kouig74utopr","tag_id":"cj9ct93ge000bkoui4xol1pdr","_id":"cj9ct93gm000ikouimvyt2psf"},{"post_id":"cj9ct93f50002kouig74utopr","tag_id":"cj9ct93gl000fkouikugd183p","_id":"cj9ct93gn000jkouir8gsx0dw"},{"post_id":"cj9ct93g40006kouincnas6dr","tag_id":"cj9ct93gm000hkoui2z64ynik","_id":"cj9ct93gp000lkouit1ud345k"},{"post_id":"cj9ct93g40006kouincnas6dr","tag_id":"cj9ct93gl000fkouikugd183p","_id":"cj9ct93gp000mkouieas9008x"}],"Tag":[{"name":"Code Coverage","_id":"cj9ct93g10005kouiiv3ml659"},{"name":"CI","_id":"cj9ct93gc0008kouimr5egiyo"},{"name":"Clipboard","_id":"cj9ct93ge000bkoui4xol1pdr"},{"name":"C#","_id":"cj9ct93gl000fkouikugd183p"},{"name":"DragDrop","_id":"cj9ct93gm000hkoui2z64ynik"}]}}